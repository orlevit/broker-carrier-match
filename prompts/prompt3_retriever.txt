I have chroma vectordb dataset in location "data/guide_db" each embeddings has also this metadata,:

metadata = {                                                                                                                                                              
  "carrier_name": "{carrier_name}",                                                                                                                                               
  "geographical_region": {                                                                                                                                                       
        "include": [list of included regions ONLY from this text (or null if not mentioned)],                                                                                     
"exclude": [list of excluded regions ONLY from this text (or null if not mentioned)]                                                                                              
            },                                                                                                                                                                   
  "coverage": [list of coverage types ONLY from this text (or null if not mentioned)],                                                                                            
  "capacity": [list of dictionaries in the form {"name": "price description"} ONLY from this text (or None if not mentioned)],                                                  
  "limit": [list of dictionaries in the form {"name": "price description"} ONLY from this text (or None if not mentioned)],                                                     
  "Natural_disaster": {                                                                                                                                                          
        "include": [list of included natural disasters ONLY from this text (or None if not mentioned)],                                                                           
"exclude": [list of excluded natural disasters ONLY from this text (or None if not mentioned)]                                                                                    
            } ,
"section_number": "1.2.1"
} 

I want you to write a document retriever as a context to a USER_QUESTION, The retriever return maximum of  MAX_NUM_TOKENS as a context.
the retriever should fetch the K_TOP_SIMILAR result in the vectordb, in addition to all documents having similar metadata that exists in the USER_QUESTION, for example: 
if USER_QUESTION is "In which regions carrier supplies services, which cover houses damaged by Flood" the question need to be sent to chatgpt to be formulated as possible metadata for a match and the result should be something like: {"request": ["limit"], "conditions": {"coverage":["houses"], "Natural_disaster":{"include":[flood]}}}. The result from the chatgpt should be used as a filter to extract all relevant documents.

if chatgpt failed to extract suitable metadata the will be used as filler  than only return the most similar K_TOP_SIMILAR results and log it to logger.
also log the following cases:
1) If not  all the returned documents filtered through chatgpt metadata are in consecutive location(logger example document between them)
2) If not there is document that are more similar than those filtered through chatgpt metadata.(logger example)

After retriving the document should be consolidate in this manner:
1) extract the json in "data/section_map.json" there is a dictionary, that has the dictionary for example:
{                                                                                                                                                              
  "carrier_name": {
  "full_doc":"1",
  "...":"1.1",
  "...":" 1.2.1"
  }
}
2) if there are sub sections that are also retrieved with the same carrier name, than drop them.
3) add in the beginning a small summary of the text.

also log each of the steps and their results.
